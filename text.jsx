//Postman data
{
    "filename": null,
    "fileByte": "",
    "jsondata": "[{\"Confidence\":99.83524,\"DetectedText\":\"This is the first line of\",\"Geometry\":{\"BoundingBox\":{\"Height\":0.15435122,\"Left\":0.162137657,\"Top\":0.0445333757,\"Width\":0.8002142},\"Polygon\":[{\"X\":0.162137657,\"Y\":0.0445333757},{\"X\":0.9623518,\"Y\":0.0386922173},{\"X\":0.962577,\"Y\":0.193043441},{\"X\":0.162362829,\"Y\":0.1988846}]},\"Id\":0,\"ParentId\":0,\"Type\":{\"Value\":\"LINE\"}},{\"Confidence\":99.84699,\"DetectedText\":\"this text example.\",\"Geometry\":{\"BoundingBox\":{\"Height\":0.19488962,\"Left\":0.021311,\"Top\":0.265860975,\"Width\":0.6563234},\"Polygon\":[{\"X\":0.021311,\"Y\":0.265860975},{\"X\":0.677634358,\"Y\":0.28691718},{\"X\":0.676384747,\"Y\":0.4818068},{\"X\":0.0200613737,\"Y\":0.4607506}]},\"Id\":1,\"ParentId\":0,\"Type\":{\"Value\":\"LINE\"}},{\"Confidence\":99.82604,\"DetectedText\":\"This is the second line\",\"Geometry\":{\"BoundingBox\":{\"Height\":0.147140056,\"Left\":0.162301034,\"Top\":0.5277672,\"Width\":0.816471},\"Polygon\":[{\"X\":0.162301034,\"Y\":0.5277672},{\"X\":0.978772044,\"Y\":0.5263138},{\"X\":0.9788244,\"Y\":0.673453867},{\"X\":0.162353382,\"Y\":0.6749072}]},\"Id\":2,\"ParentId\":0,\"Type\":{\"Value\":\"LINE\"}},{\"Confidence\":99.40262,\"DetectedText\":\"of the same text.\",\"Geometry\":{\"BoundingBox\":{\"Height\":0.15260005,\"Left\":0.0247488879,\"Top\":0.7611765,\"Width\":0.61821866},\"Polygon\":[{\"X\":0.0247488879,\"Y\":0.7611765},{\"X\":0.6429676,\"Y\":0.7746461},{\"X\":0.64230305,\"Y\":0.9272462},{\"X\":0.0240843855,\"Y\":0.9137766}]},\"Id\":3,\"ParentId\":0,\"Type\":{\"Value\":\"LINE\"}},{\"Confidence\":99.3998947,\"DetectedText\":\"This\",\"Geometry\":{\"BoundingBox\":{\"Height\":0.144736841,\"Left\":0.162352934,\"Top\":0.0473684222,\"Width\":0.152941182},\"Polygon\":[{\"X\":0.162352934,\"Y\":0.0473684222},{\"X\":0.315294117,\"Y\":0.0473684222},{\"X\":0.315294117,\"Y\":0.192105263},{\"X\":0.162352934,\"Y\":0.192105263}]},\"Id\":4,\"ParentId\":0,\"Type\":{\"Value\":\"WORD\"}},{\"Confidence\":99.85298,\"DetectedText\":\"is\",\"Geometry\":{\"BoundingBox\":{\"Height\":0.139473692,\"Left\":0.338823527,\"Top\":0.05,\"Width\":0.0564705878},\"Polygon\":[{\"X\":0.338823527,\"Y\":0.05},{\"X\":0.39529413,\"Y\":0.05},{\"X\":0.39529413,\"Y\":0.189473689},{\"X\":0.338823527,\"Y\":0.189473689}]},\"Id\":5,\"ParentId\":0,\"Type\":{\"Value\":\"WORD\"}},{\"Confidence\":99.98075,\"DetectedText\":\"the\",\"Geometry\":{\"BoundingBox\":{\"Height\":0.142105266,\"Left\":0.417647064,\"Top\":0.0473684222,\"Width\":0.12},\"Polygon\":[{\"X\":0.417647064,\"Y\":0.0473684222},{\"X\":0.537647069,\"Y\":0.0473684222},{\"X\":0.537647069,\"Y\":0.189473689},{\"X\":0.417647064,\"Y\":0.189473689}]},\"Id\":6,\"ParentId\":0,\"Type\":{\"Value\":\"WORD\"}},{\"Confidence\":99.98896,\"DetectedText\":\"first\",\"Geometry\":{\"BoundingBox\":{\"Height\":0.144736841,\"Left\":0.56,\"Top\":0.0447368436,\"Width\":0.144705877},\"Polygon\":[{\"X\":0.56,\"Y\":0.0447368436},{\"X\":0.7047059,\"Y\":0.0447368436},{\"X\":0.7047059,\"Y\":0.189473689},{\"X\":0.56,\"Y\":0.192105263}]},\"Id\":7,\"ParentId\":0,\"Type\":{\"Value\":\"WORD\"}},{\"Confidence\":99.99119,\"DetectedText\":\"line\",\"Geometry\":{\"BoundingBox\":{\"Height\":0.150018454,\"Left\":0.7294118,\"Top\":0.0447368436,\"Width\":0.125992328},\"Polygon\":[{\"X\":0.7294118,\"Y\":0.0447368436},{\"X\":0.8552941,\"Y\":0.0394736826},{\"X\":0.857647061,\"Y\":0.189473689},{\"X\":0.730588257,\"Y\":0.194736838}]},\"Id\":8,\"ParentId\":0,\"Type\":{\"Value\":\"WORD\"}},{\"Confidence\":99.7976761,\"DetectedText\":\"of\",\"Geometry\":{\"BoundingBox\":{\"Height\":0.15,\"Left\":0.8835294,\"Top\":0.0394736826,\"Width\":0.07882353},\"Polygon\":[{\"X\":0.8835294,\"Y\":0.0394736826},{\"X\":0.962352931,\"Y\":0.0394736826},{\"X\":0.962352931,\"Y\":0.189473689},{\"X\":0.8835294,\"Y\":0.189473689}]},\"Id\":9,\"ParentId\":0,\"Type\":{\"Value\":\"WORD\"}},{\"Confidence\":99.99084,\"DetectedText\":\"this\",\"Geometry\":{\"BoundingBox\":{\"Height\":0.144736841,\"Left\":0.02117647,\"Top\":0.2868421,\"Width\":0.136470586},\"Polygon\":[{\"X\":0.02117647,\"Y\":0.2868421},{\"X\":0.157647058,\"Y\":0.2868421},{\"X\":0.157647058,\"Y\":0.431578934},{\"X\":0.02117647,\"Y\":0.431578934}]},\"Id\":10,\"ParentId\":1,\"Type\":{\"Value\":\"WORD\"}},{\"Confidence\":99.98229,\"DetectedText\":\"text\",\"Geometry\":{\"BoundingBox\":{\"Height\":0.134210527,\"Left\":0.177647054,\"Top\":0.3,\"Width\":0.144705877},\"Polygon\":[{\"X\":0.177647054,\"Y\":0.3},{\"X\":0.322352946,\"Y\":0.3},{\"X\":0.322352946,\"Y\":0.434210539},{\"X\":0.177647054,\"Y\":0.434210539}]},\"Id\":11,\"ParentId\":1,\"Type\":{\"Value\":\"WORD\"}},{\"Confidence\":99.5678558,\"DetectedText\":\"example.\",\"Geometry\":{\"BoundingBox\":{\"Height\":0.181582764,\"Left\":0.34117648,\"Top\":0.2868421,\"Width\":0.334117651},\"Polygon\":[{\"X\":0.34117648,\"Y\":0.2868421},{\"X\":0.6752941,\"Y\":0.2868421},{\"X\":0.6764706,\"Y\":0.468421042},{\"X\":0.34117648,\"Y\":0.471052617}]},\"Id\":12,\"ParentId\":1,\"Type\":{\"Value\":\"WORD\"}},{\"Confidence\":99.38014,\"DetectedText\":\"This\",\"Geometry\":{\"BoundingBox\":{\"Height\":0.144736841,\"Left\":0.162352934,\"Top\":0.528947353,\"Width\":0.154117644},\"Polygon\":[{\"X\":0.162352934,\"Y\":0.528947353},{\"X\":0.3164706,\"Y\":0.528947353},{\"X\":0.3164706,\"Y\":0.673684239},{\"X\":0.162352934,\"Y\":0.673684239}]},\"Id\":13,\"ParentId\":2,\"Type\":{\"Value\":\"WORD\"}},{\"Confidence\":99.85287,\"DetectedText\":\"is\",\"Geometry\":{\"BoundingBox\":{\"Height\":0.139473692,\"Left\":0.338823527,\"Top\":0.531578958,\"Width\":0.0564705878},\"Polygon\":[{\"X\":0.338823527,\"Y\":0.531578958},{\"X\":0.39529413,\"Y\":0.531578958},{\"X\":0.39529413,\"Y\":0.671052635},{\"X\":0.338823527,\"Y\":0.671052635}]},\"Id\":14,\"ParentId\":2,\"Type\":{\"Value\":\"WORD\"}},{\"Confidence\":99.96951,\"DetectedText\":\"the\",\"Geometry\":{\"BoundingBox\":{\"Height\":0.144736841,\"Left\":0.4164706,\"Top\":0.528947353,\"Width\":0.121176474},\"Polygon\":[{\"X\":0.4164706,\"Y\":0.528947353},{\"X\":0.537647069,\"Y\":0.528947353},{\"X\":0.537647069,\"Y\":0.673684239},{\"X\":0.4164706,\"Y\":0.673684239}]},\"Id\":15,\"ParentId\":2,\"Type\":{\"Value\":\"WORD\"}},{\"Confidence\":99.94966,\"DetectedText\":\"second\",\"Geometry\":{\"BoundingBox\":{\"Height\":0.139473692,\"Left\":0.557647049,\"Top\":0.531578958,\"Width\":0.265882343},\"Polygon\":[{\"X\":0.557647049,\"Y\":0.531578958},{\"X\":0.8235294,\"Y\":0.531578958},{\"X\":0.8235294,\"Y\":0.671052635},{\"X\":0.557647049,\"Y\":0.671052635}]},\"Id\":16,\"ParentId\":2,\"Type\":{\"Value\":\"WORD\"}},{\"Confidence\":99.978035,\"DetectedText\":\"line\",\"Geometry\":{\"BoundingBox\":{\"Height\":0.144741625,\"Left\":0.8494118,\"Top\":0.528947353,\"Width\":0.1282623},\"Polygon\":[{\"X\":0.8494118,\"Y\":0.528947353},{\"X\":0.977647066,\"Y\":0.5263158},{\"X\":0.978823543,\"Y\":0.671052635},{\"X\":0.8494118,\"Y\":0.673684239}]},\"Id\":17,\"ParentId\":2,\"Type\":{\"Value\":\"WORD\"}},{\"Confidence\":99.64564,\"DetectedText\":\"of\",\"Geometry\":{\"BoundingBox\":{\"Height\":0.139473692,\"Left\":0.0247058831,\"Top\":0.771052659,\"Width\":0.07882353},\"Polygon\":[{\"X\":0.0247058831,\"Y\":0.771052659},{\"X\":0.103529409,\"Y\":0.771052659},{\"X\":0.103529409,\"Y\":0.910526335},{\"X\":0.0247058831,\"Y\":0.910526335}]},\"Id\":18,\"ParentId\":3,\"Type\":{\"Value\":\"WORD\"}},{\"Confidence\":99.96299,\"DetectedText\":\"the\",\"Geometry\":{\"BoundingBox\":{\"Height\":0.14737311,\"Left\":0.11647059,\"Top\":0.768421054,\"Width\":0.120028853},\"Polygon\":[{\"X\":0.11647059,\"Y\":0.768421054},{\"X\":0.2364706,\"Y\":0.765789449},{\"X\":0.237647057,\"Y\":0.9131579},{\"X\":0.11647059,\"Y\":0.9157895}]},\"Id\":19,\"ParentId\":3,\"Type\":{\"Value\":\"WORD\"}},{\"Confidence\":99.83817,\"DetectedText\":\"same\",\"Geometry\":{\"BoundingBox\":{\"Height\":0.107901148,\"Left\":0.258823544,\"Top\":0.805263162,\"Width\":0.201193675},\"Polygon\":[{\"X\":0.258823544,\"Y\":0.805263162},{\"X\":0.46,\"Y\":0.802631557},{\"X\":0.461176485,\"Y\":0.910526335},{\"X\":0.258823544,\"Y\":0.9131579}]},\"Id\":20,\"ParentId\":3,\"Type\":{\"Value\":\"WORD\"}},{\"Confidence\":98.16367,\"DetectedText\":\"text.\",\"Geometry\":{\"BoundingBox\":{\"Height\":0.131578952,\"Left\":0.481176466,\"Top\":0.7842105,\"Width\":0.161176473},\"Polygon\":[{\"X\":0.481176466,\"Y\":0.7842105},{\"X\":0.642352939,\"Y\":0.7842105},{\"X\":0.642352939,\"Y\":0.9157895},{\"X\":0.481176466,\"Y\":0.9157895}]},\"Id\":21,\"ParentId\":3,\"Type\":{\"Value\":\"WORD\"}}]"
}

// jsx file


import React, { Component } from 'react';
import axios from 'axios'




class Image extends Component {
    constructor(props) {
        super(props);
        this.state = { file: '', imagePreviewUrl: '', selectedOption: '', change: [], response: [], path: "false", jsonData:[] };
    }

    handleSubmit(e) {

        e.preventDefault();
 
        debugger;

        var byteCode = this.state.imagePreviewUrl.substring((e.target.value).indexOf(',') + 23);
      
        console.log('base64 byte code substring data', byteCode);
  
      
            let url = "http://192.168.4.138/MediaAnalysisImage_Amazon/api/IdentifyCelebrity/IdentifyCelebrity"
            console.log(url);
            const data = {  "fileByte": byteCode }
       
            console.log(data)

            const response = axios.post(url, data)
                .then(response => {
                    this.setState({
                        change: response,
                        byteArr: response.data.fileByte,
                        jsonData: response.data.jsondata

                    });
                    console.log('Byte data', this.state.byteArr)
                    console.log('json data', this.state.jsonData)
                })
        



    }

    radioChange = (e) => {
        this.setState({
            selectedOption: e.target.value

        });

    }
    handleImageChange(e) {
        e.preventDefault();

        let reader = new FileReader();
        let file = e.target.files[0];


        reader.onloadend = () => {
            this.setState({
                file: file,
                imagePreviewUrl: reader.result



            });

        }

        reader.readAsDataURL(file)


    }

    render() {
        const img = "data:image/png;base64" + ',' + this.state.byteArr
        //const prdAcctId = NomDetail.lBrCode + '-' + NomDetail.prdAcctId  
        let { imagePreviewUrl } = this.state;

        let $imagePreview = null;
        if (imagePreviewUrl) {
            $imagePreview = (<img src={imagePreviewUrl} className="img-responsive imgp" />);
            console.log(imagePreviewUrl)
        } else {
            $imagePreview = (<span className="previewText">Please select an Image for Preview</span>);
        }

        return (
            <div className="wrapper">
                <h2 className="text-center heading" >Text Recognization</h2>
                <div className="container ">

                    <section className="celeb">
                        <form className="Fform bg-light mb-4">

                            <div class="form-check">
                                <label class="form-check-label">
                                    <input type="radio" class="form-check-input" name="optradio" value="face" onChange={this.radioChange} />Face
                         </label>
                            </div>
                            <div class="form-check">
                                <label class="form-check-label">
                                    <input type="radio" class="form-check-input" name="optradio" value="celeb" onChange={this.radioChange} />Celeb
                         </label>
                            </div>
                            <div class="form-check mb-4">
                                <label class="form-check-label">
                                    <input type="radio" class="form-check-input" name="optradio" value="text" onChange={this.radioChange} />Text
                         </label>
                            </div>
                            <div class="form-group ">
                                <input className="fileInput"
                                    type="file"
                                    onChange={(e) => this.handleImageChange(e)} class="btn btn-secondary" />
                            </div>
                            <button className="btn btn-success"
                                type="submit"
                                onClick={(e) => this.handleSubmit(e)}>Upload Image</button>
                        </form>
                        <hr></hr>
                        <div className="row grid">
                            <div className="col-md-6">
                                <h3>Input Image</h3>
                                {$imagePreview}
                            </div>
                            <div className="col-md-6">
                                <h3>Output Image</h3>



                                <img src={img} className="img-responsive imgp" />
                            </div>
                        </div>
                        <div>
                            <hr></hr>

                            <h4>Description </h4>
                            <table className="table table-hover">
                                <tr>
                                    <th ><label>Name :- </label></th>
                                    <td>{this.state.jsonData}</td>
                                </tr>
                            </table>


                        </div>
                    </section>
                </div>
            </div>
        )
    }
}
export default Image;

